<?xml version="1.0" encoding="UTF-8"?>
	<!-- 
		Licensed to the Apache Software Foundation (ASF) under one or more contributor 
		license agreements. See the NOTICE file distributed with this work for additional 
		information regarding copyright ownership. The ASF licenses this file to 
		you under the Apache License, Version 2.0 (the "License"); you may not use 
		this file except in compliance with the License. You may obtain a copy of 
		the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
		by applicable law or agreed to in writing, software distributed under the 
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
		OF ANY KIND, either express or implied. See the License for the specific 
		language governing permissions and limitations under the License. 
	-->
<!-- $Id: pom.xml 642118 2008-03-28 08:04:16Z reinhard $ -->
<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" >
	
	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>
	
	<groupId>de.comlineag.snc</groupId>
	<artifactId>SocialNetworkConnector</artifactId>
	<version>0.3.0</version>
	
	<name>Social Network Connector</name>
	<url>http://service.comlineag.de/snc</url>
	
	<organization>
		<name>COMLINE AG</name>
		<url>http://www.comlineag.de</url>
	</organization>
	
	
	<properties>
		<!-- source encoding for the project got us rid of that annoying error messages in eclipse -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<build>
		<plugins>
			<!-- the actual maven plugin for build and deployment -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version> 
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<!-- to overcome a nasty heap memory issue -->
            		<argLine>-Xmx1024m</argLine>
            		
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>mainclass</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			
			<!-- work with dependencies, not provided on target app-server - NOT SUPPORTED BY m2e ??? --> 
<!-- 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
-->
			
			<!-- 
				application server configuration - this is where you want to define your app-server of choice 
			-->
			<!-- JETTY APPLICATION SERVER --> 
<!-- 
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.7</version>
				<configuration>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8888</port>
							<maxIdleTime>30000</maxIdleTime>
						</connector>
					</connectors>
					<webAppSourceDirectory>${project.build.directory}/${project.artifactId}-${project.version}</webAppSourceDirectory>
					<contextPath>/</contextPath>
				</configuration>
			</plugin>
-->
					

			<!-- TOMCAT 7 APPLICATION SERVER -->
			<!-- CAUSES THIS ERROR AT THE MOMENT:
					The POM for org.apache.tomcat.maven:tomcat7-maven-plugin:jar:2.3 is missing, no dependency information available -->
<!-- 
			<plugin> 
				<groupId>org.apache.tomcat.maven</groupId> 
				<artifactId>tomcat7-maven-plugin</artifactId> 
				<version>2.3</version> 
				<configuration> 
					<connectors> 
						<url>http://localhost:8080/SocialNetworkConnector</url> 
						<connector> 
							<port>8080</port> 
							<maxIdleTime>30000</maxIdleTime> 
						</connector> 
					</connectors> 
					<webAppSourceDirectory>${project.build.directory}/${project.artifactId}-${project.version}</webAppSourceDirectory> 
					<contextPath>/</contextPath> 
				</configuration>
			</plugin> 
-->

 			
 			<!-- GLASSFISH EMBEDDED APP-SERVER -->
<!-- 
 			<plugin>
				<groupId>org.glassfish.embedded</groupId>
				<artifactId>maven-embedded-glassfish-plugin</artifactId>
				<version>3.1.2.2</version>
				<configuration>
					<app>target/${project.artifactId}-${project.version}</app>
					<port>8282</port>
					<contextRoot>${project.artifactId}</contextRoot>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.glassfish.main</groupId>
						<artifactId>simple-glassfish-api</artifactId>
						<version>4.0-b79</version>
					</dependency>
					<dependency>
						<groupId>org.glassfish.main.extras</groupId>
						<artifactId>glassfish-embedded-all</artifactId>
						<version>4.0-b83</version>
					</dependency>
				</dependencies>
			</plugin>
 -->		
 			
 			<!-- GLASSFISH STANDALONE APPLICATION SERVER -->
<!-- 
 			<plugin>
				<groupId>org.glassfish.main.common</groupId>
				<artifactId>glassfish-api</artifactId>
				<version>4.0</version>
				
				<configuration>
					<glassfishDirectory>/opt/glassfish4</glassfishDirectory>
					<user>admin</user>
					<adminPassword>admin123</adminPassword>
					
					<app>SocialNetworkConnector.war</app>
					
					<autoCreate>true</autoCreate>
					<debug>true</debug>
					<echo>false</echo>
					<terse>true</terse>
					<executions>
						<execution>
							<phase>install</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
						</execution>
					</executions>
				</configuration>
 			</plugin>
-->
		</plugins>
	</build>
	<!-- END OF APPLICATION SERVER PLUGINS -->
	
	<!-- Dependencies for the project -->
	<dependencies>
		<!-- as mentioned by Till Wohlatz to overcome build error -->
		<dependency> 
			<groupId>org.eclipse.persistence</groupId> 
			<artifactId>eclipselink</artifactId> 
			<version>2.5.0-RC1</version> 
			<exclusions> 
				<exclusion> 
					<groupId>org.eclipse.persistence</groupId> 
					<artifactId>commonj.sdo</artifactId> 
				</exclusion> 
			</exclusions>           
		</dependency>
		
		
		<!-- the basic SPRING framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.0.6.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>4.0.6.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>4.0.6.RELEASE</version>
		</dependency>
		
		
		<!-- GUI - SPRING MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.0.6.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.0.6.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		
		
		<!-- SOCIAL NETWORK CONNECTION -->
		<!-- to work with the twitter api -->
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>hbc-core</artifactId> 
			<version>2.2.0</version> 
		</dependency>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>hbc-twitter4j</artifactId> 
			<version>2.2.0</version> 
		</dependency>
		
		<!-- to work with the facebook api -->
		<!-- needed for the Facebook4JFbCrawler -->
		<dependency>
			<groupId>org.facebook4j</groupId>
			<artifactId>facebook4j-core</artifactId>
			<version>[2.1,)</version>
		</dependency>
		<!-- need for the FacebookSpringFbCrawler -->
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-facebook</artifactId>
			<version>1.1.1.RELEASE</version>
		</dependency>

        
		<!-- TRANSPORT AND CONNECTION PROTOCOL -->
		<!-- to work with http connections -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.3.4</version>
		</dependency>
		<!-- TODO get rid of this. it is only needed for the HttpErrorMessages and HttpStatusCode Implementation -->
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		
		<!-- to work with OData interfaces -->
		<dependency>
			<groupId>org.odata4j</groupId>
			<artifactId>odata4j</artifactId>
			<version>0.5</version>
		</dependency>
		
		<!-- to work with odata calls and catch the ClientException -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.11</version>
			<scope>provided</scope>
		</dependency>
		
		
		<!-- DATA MANIPULATION -->
		<!-- to work with json objects -->
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- and the specialized version to work with geo json objects -->
		<dependency>
			<groupId>de.grundid.opendatalab</groupId>
			<artifactId>geojson-jackson</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- to strip all html elements from a text -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.3</version>
		</dependency>
		
		<!-- used by truncateHtml from dataHelper -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		
		<!-- Boilerpipe is used to get rid of all clutter from a web page - used by web crawler 
		<dependency>
			<groupId>org.ow2.weblab.webservices</groupId>
			<artifactId>boilerpipe-html-purification-service</artifactId>
			<version>1.4-RC1</version>
		</dependency>
		-->
		<dependency>
		    <groupId>de.l3s.boilerpipe</groupId>
		    <artifactId>boilerpipe</artifactId>
		    <version>1.2.0</version>
		</dependency>
		<dependency>
		    <groupId>net.sourceforge.nekohtml</groupId>
		    <artifactId>nekohtml</artifactId>
		    <version>1.9.13</version>
		</dependency>
		
		<!-- RUNTIME ENVIRONMENT -->
		<!-- used for the job control -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>
		
		<!-- the logging mechanism - you can either use org.apache.logging.log4j or log4j. in case you opt 
			 for org.apache.logging.log4j, be sure to edit ALL classes with logging and change import and 
			 instantiation of logging - because of this, I would recommend to stick with the simple log4j
		-->
<!-- 
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.0</version>
		</dependency>
-->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- Xerces Dependencies to parse the log4j.xml: xercesImpl.jar and xml-apis.jar -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.11.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId> 
			<!-- xml-apis was relocated from version 2.0.2 to 1.0.b2  
				 while group- and artifact-id stayed the same, does 
				 not make any sense to me, but that is what mvn says -->
			<version>1.0.b2</version>
			<scope>provided</scope>
		</dependency>


		<!-- get basic java ee7 up and running 
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>
		-->
		<!-- javax web api 
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>
		-->
		
		
		<!-- PERSISTENCE LAYER -->
		<!-- To read the crawler configuration from an ini file -->
		<dependency>
			<groupId>org.ini4j</groupId>
			<artifactId>ini4j</artifactId>
			<version>0.3.3</version>
		</dependency>
		
		<!-- to work with the neo4j graph database -->
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j</artifactId>
			<version>2.0.3</version>
			<exclusions>
				<exclusion>
					<artifactId>neo4j-cypher-compiler-1.9</artifactId>
					<groupId>org.neo4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		
		<!-- to work with the riak ring-db system -->
<!-- 
		<dependency>
			<groupId>com.basho.riak</groupId>
			<artifactId>riak-client</artifactId>
			<version>2.0.0.RC1</version>
		</dependency>
-->	
		
		<!-- activate to work with SAP HANA - external JDBC Driver --> 
<!--
		<dependency>
			<groupId>com.sap</groupId>
			<artifactId>ngdbc</artifactId>
			<version>1.00.68</version>
		</dependency>
-->

		<!-- activate to work with cassandra db system -->
<!-- 
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>1.0.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
-->
		<!-- the community driven cassandra implemenation -->
<!-- 
		<dependency>
    		<groupId>org.apache.cassandra</groupId>
    		<artifactId>cassandra-all</artifactId>
    		<version>0.8.1</version>
			
			<exclusions>
				<exclusion> 
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion> 
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
-->
	</dependencies>

	<!-- a local maven repository - currently only for the external ngdbc.jar for sap hana -->
	<repositories>
		<repository>
			<id>repo</id>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>file://${project.basedir}/repo</url>
		</repository>
		
		<!-- this repository is needed for boilerpipe -->
		<repository>
		    <id>boilerpipe-m2-repo</id>
		    <url>http://boilerpipe.googlecode.com/svn/repo/</url>
		    <releases>
		        <enabled>true</enabled>
		    </releases>
		    <snapshots>
		        <enabled>false</enabled>
		    </snapshots>
		</repository>
	</repositories>
	
	<!-- Plugin repository for Glasshfish 
	<pluginRepositories>
		<pluginRepository>
			<id>maven.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>https://maven.java.net/content/groups/promoted/</url>
		</pluginRepository>
		<pluginRepository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/glassfish/</url>
		</pluginRepository>
	</pluginRepositories>
	-->
</project>
