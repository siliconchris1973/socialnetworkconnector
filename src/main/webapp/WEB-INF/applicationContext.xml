<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- @version $Id: applicationContext.xml 561608 2007-08-01 00:33:12Z vgritsenko $ -->

<!-- <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:configurator="http://cocoon.apache.org/schema/configurator"
       xmlns:avalon="http://cocoon.apache.org/schema/avalon"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
                           http://cocoon.apache.org/schema/configurator http://cocoon.apache.org/schema/configurator/cocoon-configurator-1.0.1.xsd
                           http://cocoon.apache.org/schema/avalon http://cocoon.apache.org/schema/avalon/cocoon-avalon-1.0.xsd">

  Activate Cocoon Spring Configurator
  <configurator:settings/>

  Configure Log4j
  <bean name="org.apache.cocoon.spring.configurator.log4j"
        class="org.apache.cocoon.spring.configurator.log4j.Log4JConfigurator"
        scope="singleton">
    <property name="settings" ref="org.apache.cocoon.configuration.Settings"/>
    <property name="resource" value="/WEB-INF/log4j.xml"/>
  </bean>

  Activate Avalon Bridge
  <avalon:bridge/>

</beans> -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jdbc 
                           http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">


	<!-- Activate Spring annotation support -->
	<context:annotation-config />

	<context:component-scan base-package="de.comlineag.sbm.job" />
	<context:component-scan base-package="de.comlineag.sbm.handler" />

	<tx:annotation-driven />	
	 
	 <bean id="contextApplicationContextProvider" class="de.comlineag.sbm.persistence.ApplicationContextProvider"></bean>
	 <bean name="TwitterCrawlerDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="de.comlineag.sbm.job.TwitterCrawler" />
		<property name="jobDataAsMap">
			<map>
				<!-- These are the security tokens for the twitter API -->
				<entry key="consumerKey" value="zlGuAavBH2T23hIm57l8WA" />
				<entry key="consumerSecret" value="xzqH6lLWnXLvlHJooNDaCDXlzJzv976JcWt8y2eyHBk" />
				<entry key="token" value="754994-KDec8qJBwEggHwHQ9XO0X7QBx1VCOZwgbgtpYiibWjl" />
				<entry key="tokenSecret" value="qm1dqrJas8Lf2ANU8Lx470TkcUSndWLwvJ1I2huZKvJrc" />
			</map>
		</property>
		<property name="durability" value="true" />
	</bean>
	 
	 <bean id="TwitterCrawlerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="TwitterCrawlerDetail" />
		<!-- 1 second delay after startup -->
		<property name="startDelay" value="1000" />
		<!-- repeat the job every 50 (5000) seconds
			changed to every 5 minutes 300000 
			changed to every minute 60000 
		-->
		<property name="repeatInterval" value="6000" />
	</bean>
	 
	 <bean id="persistenceManager" class="de.comlineag.sbm.persistence.HANAPersistence">
		<property name="host" value="192.168.131.30" />
		<property name="port" value="8000" />
		<property name="protocol" value="http" />
		<property name="location" value="/comline/sbm/services" />
		<property name="serviceUserEndpoint" value="saveUser.xsodata" />
		<property name="servicePostEndpoint" value="savePost.xsodata" />
		<property name="user" value="U0JNX0VYVA==" />
		<property name="pass" value="TW9uIzRwb3Mhc29DSUFM" />
	</bean>
	
	

	<!-- <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="appSendJobDetail" />
		run every morning at 6 AM
		<property name="cronExpression" value="0 0 6 * * ?" />
	</bean> -->

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	<property name="autoStartup">
			<value>true</value>
		</property>

		<property name="overwriteExistingJobs">
			<value>true</value>
		</property>

		<property name="waitForJobsToCompleteOnShutdown">
			<value>true</value>
		</property>


		<property name="quartzProperties">
			<props>
				<!-- ThreadPool -->
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">1</prop>
			</props>
		</property>
		<property name="triggers">
			<list>
				<ref bean="TwitterCrawlerTrigger"/>
			</list>
		</property>
	</bean>
</beans>
