<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	This is the xml configuration file for the social network connector.
	
	It is used to setup general options for the runtime behavior of the SNC.
	You can, for example, configure if the system shall create a json file 
	on disk, in case the creation of a dataset in the db fails.
	
	Additionally the available social networks together with specific parameters
	are defined in here.
	
	Third, the XML structure for the configuration files of the actual crawler
	is configured in this file - but you are discouraged changing this.   
-->
<configurations>
	<!-- R U N T I M E   C O N F I G U R A T I O N
		 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		 This section contains options to change/modify the general runtime behavior of the SNC
	-->
	<configuration scope="runtime">
		<!-- show warning in case the simple INI file configuration is used -->
		<param name="WarnOnSimpleConfigOption">
			<type>boolean</type>
			<value>true</value>
			<constant>WARN_ON_SIMPLE_CONFIG_OPTION</constant>
		</param>
		<!-- show warning in case the simple XML file configuration is used -->
		<param name="WarnOnSimpleXmlConfigOption">
			<type>boolean</type>
			<value>true</value>
			<constant>WARN_ON_SIMPLE_XML_CONFIG_OPTION</constant>
		</param>
		<!-- show a debug message in case some actions are omitted due to configuration settings -->
		<param name="WarnOnRejectedActions">
			<type>boolean</type>
			<value>true</value>
			<constant>WARN_ON_REJECTED_ACTIONS</constant>
		</param>
		<!-- save a json file with the post data in case creating it in persistence fails -->
		<param name="CreatePostJsonOnError">
			<type>boolean</type>
			<value>true</value>
			<constant>CREATE_POST_JSON_ON_ERROR</constant>
		</param>
		<!-- save a json file with the user data in case creating it in persistence fails -->
		<param name="CreateUserJsonOnError">
			<type>boolean</type>
			<value>true</value>
			<constant>CREATE_USER_JSON_ON_ERROR</constant>
		</param>
		<!-- save a json file with the post data after creating it in persistence -->
		<param name="CreatePostJsonOnSuccess">
			<type>boolean</type>
			<value>false</value>
			<constant>CREATE_POST_JSON_ON_SUCCESS</constant>
		</param>
		<!-- save a json file with the user data after creating it in persistence -->
		<param name="CreateUserJsonOnSuccess">
			<type>boolean</type>
			<value>false</value>
			<constant>CREATE_USER_JSON_ON_SUCCESS</constant>
		</param>
		<!-- a storage directory under which the json files are stored in the below defined directories - must be in sync with the entry in applicationContext.xml -->
		<param name="StoragePath">
			<type>String</type>
			<value>storage</value>
			<constant>STORAGE_PATH</constant>
		</param>
		<!-- the path to the directory under which to save the json-files - must be in sync with the entry in applicationContext.xml -->
		<param name="JsonBackupStoragePath">
			<type>String</type>
			<value>json</value>
			<constant>JSON_BACKUP_STORAGE_PATH</constant>
		</param>
		<!-- the path to the directory under which to save processed json-files (files processed by FsCrawler) - must be in sync with the entry in applicationContext.xml -->
		<param name="ProcessedJsonBackupStoragePath">
			<type>String</type>
			<value>processedJson</value>
			<constant>PROCESSED_JSON_BACKUP_STORAGE_PATH</constant>
		</param>
		<!-- the path to the directory under which to store invalid json-files - must be in sync with the entry in applicationContext.xml -->
		<param name="InvalidJsonBackupStoragePath">
			<type>String</type>
			<value>invalidJson</value>
			<constant>INVALID_JSON_BACKUP_STORAGE_PATH</constant>
		</param>
		<!-- shall the crawler delete the failsave json files after processing or move the to above configured 2nd directory -->
		<param name="MoveOrDeleteProcessedJsonFiles">
			<type>String</type>
			<value>move</value>
			<constant>MOVE_OR_DELETE_PROCESSED_JSON_FILES</constant>
		</param>
		
		<!-- stop the SNC in case connecting to persistence fails and is thus unable to save posts and users?
			 Consequently, setting this to true is only useful, in case you do not setup the FsCrawler (see
			 applicationContext.xml) plus you do not save failed posts and users to disk - as configured with 
			 above parameters. -->
		<param name="ExitOnPersistenceFailure">
			<type>boolean</type>
			<value>false</value>
			<constant>STOP_SNC_ON_PERSISTENCE_FAILURE</constant>
		</param>
		
		<!-- WEB CRAWLER SPECIFIC SETTINGS -->
		<!-- how many levels shall the web crawler fetch from the top-level (or entry point) 
			 This is the overall limit. An individual web crawler can set it's own level in
			 applicationContext.xml, but it can not exceed this value. It should usually not
			 exceed 1000 and 100 should be ok for the most cases -->
		<param name="searchLimit">
			<type>int</type>
			<value>500</value>
			<constant>SEARCH_LIMIT</constant>
		</param>
		<!-- the maximum page size the simple web crawler shall fetch -->
		<param name="crawlerMaxDownloadSize">
			<type>int</type>
			<value>2000000</value>
			<constant>CRAWLER_MAX_DOWNLOAD_SIZE</constant>
		</param>
		<!-- the command (word) as returned by a website when declining the crawler's request to fetch the content 
			 YOU SHOULD PROBABLY NOT CHANGE THIS -->
		<param name="robotDisallowText">
			<type>String</type>
			<value>Disallow</value>
			<constant>ROBOT_DISALLOW_TEXT</constant>
		</param>
		<!-- shall the web crawler stay on the initial given domain while downloading linked sites or not -->
		<param name="stayOnDomain">
			<type>Boolean</type>
			<value>true</value>
			<constant>STAY_ON_DOMAIN</constant>
		</param>
	</configuration>
	
	
	
	<!-- S O C I A L   N E T W O R K   D E F I N I T I O N S - - 
		 !!!!! ATTENTION MOVED TO SocialNetworkDefinitions.xml !!!!! 
		 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
	     This section defines the social networks which can be used
		 You can define values for a 2-digit code, a name, a domain and description plus if the network is supported 
		 or not, for each social network to crawl.
		 For each network you need to define two entries. One identified by the name of the network and the other 
		 defined by the 2 digit code.
		 
		 You normally do not need to change anything in here except for the Lithium network. Lithium is special in 
		 that it can be hosted by a company for their own domain of interest. Therefore, post- and user-id's are 
		 not globally unique and you HAVE to define your own 2-letter code for each Lithium network to crawl. 
		 Failing to do so could lead to a situation where two Lithium networks are crawled and both try to insert 
		 a post with the same combination of code and id - say CC-1295 for example. -->
	<configuration scope="socialNetworkDefinition">
		<!-- THE LITHIUM NETWORK - 
		 	 change this code for every customer. 
		 	 Reserved codes are:
		 	 	FB, TW, GP, PI, XI, LI, SW, IN, FS, YT, SO, PH, GH, WC, AL, XY
		 	 do not use any of these codes
		-->
		<network name="CC"><name>LITHIUM</name></network>
		<network name="LITHIUM">
			<code>CC</code>												<!-- change this code for every customer -->
			<name>Lithium</name>										<!-- keep this the same -->
			<description>Lithium forum by Cortal Consors</description>
			<domain>https://wissen.cortalconsors.de</domain>			<!-- change the url to the location of the lithium network in use by customer -->
			<supported>YES</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		
		<!-- below this line the standard social networks are defined and it is highly discouraged to change any of them -->
		<network name="TW"><name>TWITTER</name></network>
		<network name="TWITTER">
			<code>TW</code>
			<name>Twitter</name>
			<description>Twitter</description>
			<domain>twitter.com</domain>
			<supported>YES</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="FB"><name>FACEBOOK</name></network>
		<network name="FACEBOOK">
			<code>FB</code>
			<name>Facebook</name>
			<description>Facebook</description>
			<domain>facebook.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="GP"><name>GOOGLE+</name></network>
		<network name="GOOGLE+">
			<code>GP</code>
			<name>Google+</name>
			<description>Google+ - Facebook a la Google</description>
			<domain>plus.google.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="LI"><name>LINKEDIN</name></network>
		<network name="LINKEDIN">
			<code>LI</code>
			<name>Linkedin</name>
			<description>Linkedin</description>
			<domain>linkedin.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="XI"><name>XING</name></network>
		<network name="XING">
			<code>XI</code>
			<name>XING</name>
			<description>Xing</description>
			<domain>xing.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="SW"><name>STREAMWORK</name></network>
		<network name="STREAMWORK">
			<code>SW</code>
			<name>Streamwork</name>
			<description>Streamwork - SAP's own social network community</description>
			<domain>streamwork.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="IN"><name>INSTAGRAM</name></network>
		<network name="INSTAGRAM">
			<code>IN</code>
			<name>Instagram</name>
			<description>Instagram - take a look at what I shot</description>
			<domain>instagram.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="FS"><name>FOURSQUARE</name></network>
		<network name="FOURSQUARE">
			<code>FS</code>
			<name>Foursquare</name>
			<description>Foursquare - where am I and what do I do</description>
			<domain>foursquare.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="YT"><name>YOUTUBE</name></network>
		<network name="YOUTUBE">
			<code>YT</code>
			<name>Youtube</name>
			<description>Youtube</description>
			<domain>youtube.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="SO"><name>STACKOVERFLOW</name></network>
		<network name="STACKOVERFLOW">
			<code>SO</code>
			<name>Stack Overflow</name>
			<description>Stack Overflow - developer forum</description>
			<domain>stackoverflow.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="PH"><name>PHOTOBUCKET</name></network>
		<network name="PHOTOBUCKET">
			<code>PH</code>
			<name>Photobucket</name>
			<description>Photobucket - a photographer community</description>
			<domain>photobucket.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="PI"><name>PINTEREST</name></network>
		<network name="PINTEREST">
			<code>PI</code>
			<name>Pinterest</name>
			<description>Pinterest - a general I like network</description>
			<domain>pinterest.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<network name="GH"><name>GITHUB</name></network>
		<network name="GITHUB">
			<code>GH</code>
			<name>GitHub</name>
			<description>A source code management system</description>
			<domain>github.com</domain>
			<supported>NO</supported>
			<crawlertype>native</crawlertype>
		</network>
		
		<!-- SIMPLE WEB CRAWLER - the generic code for all web pages, if they do not have a dedicated code setup in
			 the web crawler section of the crawler configuration file -->
		<network name="WC"><name>WEBCRAWLER</name></network>
		<network name="WEBCRAWLER">
			<code>WC</code>
			<name>Simple Web Crawler</name>
			<description>any possible website</description>
			<domain>https://www.everywhere.de</domain>
			<supported>YES</supported>
			<crawlertype>web</crawlertype>
		</network>
		
		<network name="AL"><name>ALL</name></network>
		<network name="ALL">
			<code>AL</code>
			<name>All</name>
			<description>All networks</description>
			<domain>bugmenot.com</domain>
			<supported>NO</supported>
			<crawlertype>undefined</crawlertype>
		</network>
		
		<network name="XY"><name>UNKNOWN</name></network>
		<network name="UNKNOWN">
			<code>XY</code>
			<name>Unknown</name>
			<description>Unknown network</description>
			<domain>bugmenot.com</domain>
			<supported>NO</supported>
			<crawlertype>undefined</crawlertype>
		</network>
	</configuration>
	
	
	<!-- DO NOT CHANGE ANYTHING BELOW THIS LINE, EXCEPT YOU ABSOLUTELY KNOW WHAT YOU ARE DOING
	     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	     
	     G E N E R A L   D A T A   D E F I N I T I O N S
	     In this section you can define how long certain fields are, for example how many  
	     characters a teaser can have and if a teaser shall be saved with markup elements or not. -->
	<configuration scope="DataDefinitions">
		<!-- shall a teaser be saved with or without html markup elements -->
		<param name="teaserWithMarkup">
			<type>boolean</type>
			<value>false</value>
			<constant>TEASER_WITH_MARKUP</constant>
		</param>
		<!-- how long shall a teaser be at max -->
		<param name="teaserMaxLength">
			<type>int</type>
			<value>256</value>
			<constant>TEASER_MAX_LENGTH</constant>
		</param>
		<!-- what shall the minimal length of a teaser be? -->
		<param name="teaserMinLength">
			<type>int</type>
			<value>20</value>
			<constant>TEASER_MIN_LENGTH</constant>
		</param>
		<!-- shall the subject of a post be saved with or without html markup elements -->
		<param name="subjectWithMarkup">
			<type>boolean</type>
			<value>false</value>
			<constant>SUBJECT_WITH_MARKUP</constant>
		</param>
		<param name="subjectMaxLength">
			<type>int</type>
			<value>20</value>
			<constant>SUBJECT_MAX_LENGTH</constant>
		</param>
		<param name="subjectMinLength">
			<type>int</type>
			<value>7</value>
			<constant>SUBJECT_MIN_LENGTH</constant>
		</param>
		<!-- shall the posts be saved with or without html markup elements - this should usually be kept false
			 the text-field of the database is normally only used for the semantic analysis and therefore does
			 not need any markups -->
		<param name="textWithMarkup">
			<type>boolean</type>
			<value>false</value>
			<constant>TEXT_WITH_MARKUP</constant>
		</param>
		<!-- shall the raw text field contain text with html markup elements - this should usually be kept true -->
		<param name="rawTextWithMarkup">
			<type>boolean</type>
			<value>true</value>
			<constant>RAW_TEXT_WITH_MARKUP</constant>
		</param>
	</configuration>
	
	<!-- X M L   L A Y O U T   C O N F I G U R A T I O N
	     the values in this section define how the crawler configuration xml files are structured.
		 Changing any of these values is possible to reflect changes in the xml configuration layout
		 but it is highly discouraged. -->
	<configuration scope="XmlLayout">
		<param name="CONSTRAINT_TERM_TEXT">
			<type>String</type>
			<value>term</value>
		</param>
		<param name="CONSTRAINT_USER_TEXT">
			<type>String</type>
			<value>user</value>
		</param>
		<param name="CONSTRAINT_LANGUAGE_TEXT">
			<type>String</type>
			<value>language</value>
		</param>
		<param name="CONSTRAINT_SITE_TEXT">
			<type>String</type>
			<value>site</value>
		</param>
		<param name="CONSTRAINT_BOARD_TEXT">
			<type>String</type>
			<value>board</value>
		</param>
		<param name="CONSTRAINT_BLOG_TEXT">
			<type>String</type>
			<value>blog</value>
		</param>
		<param name="CONSTRAINT_LOCATION_TEXT">
			<type>String</type>
			<value>geoLocation</value>
		</param>
		
		
		
		<!-- this section contains the xml structure for the crawler configuration
		     changing these values WILL become possible (in revision 1.1) to reflect XML layout changes
			 as of the moment, August 2014, these values are NOT changeable, as the RuntimeConfiguration-class
			 lacks the code to parse this section of the xml file! -->
		<param name="customerIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>customer</value>
		</param>
		<param name="customerNameIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>name</value>
		</param>
		<param name="customerNameForAllValue"> <!-- changeable -->
			<type>String</type>
			<value>ALL</value>
		</param>
		<param name="domainIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>domain</value>
		</param>
		<param name="domainStructureIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>domainStructure</value>
		</param>
		<param name="domainNameIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>name</value>
		</param>
		<param name="domainNameForAllValue"> <!-- changeable -->
			<type>String</type>
			<value>ALL</value>
		</param>
		<param name="constraintIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>constraints</value>
		</param>
		<param name="scopeOnAllValue"> <!-- changeable -->
			<type>String</type>
			<value>ALL</value>
		</param>
		<param name="singleConstraintIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>constraint</value>
		</param>
		<param name="codeIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>code</value>
		</param>
		<param name="socialNetworkIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>socialNetworkDefinition</value>
		</param>
		<param name="socialNetworkNameIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>network</value>
		</param>
		
		<!-- whether or not a specific crawler shall run -->
		<param name="crawlerRunIdentifier"> <!-- changeable -->
			<type>String</type>
			<value>CrawlerRun</value>
		</param>
		
		
		<!-- 
			 for stability and startup reasons these last 4 layout elements (root-, 
			 singleConfiguration-, value- and scopeIdentifier) CAN NOT BE CHANGED! 
			 even if you do so here, this won't have any effect as they need to be 
			 and are hard coded in the RuntimeConfiguration class. 
		 -->
		<param name="rootIdentifier"> <!-- not changeable -->
			<type>String</type>
			<value>configurations</value>
		</param>
		<param name="singleConfigurationIdentifier"> <!-- not changeable -->
			<type>String</type>
			<value>configuration</value>
		</param>
		<param name="valueIdentifier"> <!-- not changeable -->
			<type>String</type>
			<value>value</value>
		</param>
		<param name="scopeIdentifier"> <!-- not changeable -->
			<type>String</type>
			<value>scope</value>
		</param>
	</configuration>
</configurations>