<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	This is the xml configuration file for the social network connector.
	
	It is used to setup general options for the runtime behavior of the SNC
	First of all the domain and customer this specific instance of the SNC 
	is started for, is configured here.
	Then you can configure certain runtime behavior for the SNC in here. For 
	example, you can configure if the system shall create a json file on disk
	in case the creation of a dataset in the db fails.
	Third, the XML structure for the configuration files of the actual crawler
	is configured in this file - but you are discouraged changing this.   
-->
<configurations>
	<!-- START OF RUNTIME CONFIG -->
	<configuration scope="runtime">
		<!-- show warning in case the simple INI file configuration is used -->
		<param name="WarnOnSimpleConfigOption">
			<type>boolean</type>
			<value>true</value>
		</param>
		<!-- show warning in case the simple XML file configuration is used -->
		<param name="WarnOnSimpleXmlConfigOption">
			<type>boolean</type>
			<value>true</value>
		</param>
		<!-- save a json file with the post data in case creating it in persistence fails -->
		<param name="CreatePostJsonOnError">
			<type>boolean</type>
			<value>true</value>
			<constant>CREATE_POST_JSON_ON_ERROR</constant>
		</param>
		<!-- save a json file with the user data in case creating it in persistence fails -->
		<param name="CreateUserJsonOnError">
			<type>boolean</type>
			<value>true</value>
			<constant>CREATE_USER_JSON_ON_ERROR</constant>
		</param>
		<!-- save a json file with the post data after creating it in persistence -->
		<param name="CreatePostJsonOnSuccess">
			<type>boolean</type>
			<value>false</value>
			<constant>CREATE_POST_JSON_ON_SUCCESS</constant>
		</param>
		<!-- save a json file with the user data after creating it in persistence -->
		<param name="CreateUserJsonOnSuccess">
			<type>boolean</type>
			<value>false</value>
			<constant>CREATE_USER_JSON_ON_SUCCESS</constant>
		</param>
		<!-- stop the SNC in case connecting to persistence fails -->
		<param name="ExitOnPersistenceFailure">
			<type>boolean</type>
			<value>true</value>
			<constant>STOP_SNC_ON_PERSISTENCE_FAILURE</constant>
		</param>
	</configuration>
	
	
	<!-- This section defines the social networks which can be used
	
		 You normally do not need to change anything in here except
		 for the Lithium network. Lithium is special in that it can
		 be hosted by a company for their own domain of interest. 
		 Therefore, post- and user-id's are not globally unique and
		 you have to define your own 2-letter code for each Lithium
		 network to crawl for each customer. Failing to do so could
		 lead to a situation where two Lithium networks are crawled
		 for two different customers and both try to insert a post 
		 with the same id.
	-->
	<configuration scope="socialNetworkDefinition">
		<network name="LITHIUM">
			<code>CC</code>
			<name>Lithium</name>
			<description>Lithium forum by Cortal Consors</description>
			<domain>https://wissen.cortalconsors.de</domain>
		</network>
		<network name="FINANZFORUM">
			<code>FI</code>
			<name>Finanzforum</name>
			<description>Finanzforum</description>
			<domain>bugmenot.com</domain>
		</network>
		
		<!-- below this line the standard social networks are defined -->
		<network name="ALL">
			<code>AL</code>
			<name>All</name>
			<description>All networks</description>
			<domain>bugmenot.com</domain>
		</network>
		<network name="UNKNOWN">
			<code>XY</code>
			<name>Unknown</name>
			<description>Unknown network</description>
			<domain>bugmenot.com</domain>
		</network>
		<network name="TWITTER">
			<code>TW</code>
			<name>Twitter</name>
			<description>Twitter</description>
			<domain>twitter.com</domain>
		</network>
		<network name="FACEBOOK">
			<code>FB</code>
			<name>Facebook</name>
			<description>Facebook</description>
			<domain>facebook.com</domain>
		</network>
		<network name="GOOGLE+">
			<code>GP</code>
			<name>Google+</name>
			<description>Google +</description>
			<domain>plus.google.com</domain>
		</network>
		<network name="LINKEDIN">
			<code>LI</code>
			<name>Linkedin</name>
			<description>Linkedin</description>
			<domain>linkedin.com</domain>
		</network>
		<network name="XING">
			<code>XI</code>
			<name>XING</name>
			<description>Xing</description>
			<domain>xing.com</domain>
		</network>
		<network name="STREAMWORK">
			<code>SW</code>
			<name>Streamwork</name>
			<description>Streamwork</description>
			<domain>streamwork.com</domain>
		</network>
		<network name="INSTAGRAM">
			<code>IN</code>
			<name>Instagram</name>
			<description>Instagram</description>
			<domain>instagram.com</domain>
		</network>
		<network name="FOURSQUARE">
			<code>FS</code>
			<name>Foursquare</name>
			<description>Foursquare</description>
			<domain>foursquare.com</domain>
		</network>
		<network name="YOUTUBE">
			<code>YT</code>
			<name>Youtube</name>
			<description>Youtube</description>
			<domain>youtube.com</domain>
		</network>
		<network name="STACKOVERFLOW">
			<code>SO</code>
			<name>Stack Overflow</name>
			<description>Stack Overflow - developer forum</description>
			<domain>stackoverflow.com</domain>
		</network>
	</configuration>
	
	
	<!-- START OF CONFIGURATION XML LAYOUT -->
	<!-- DO NOT CHANGE ANYTHING BELOW THIS LINE, EXCEPT YOU ABSOLUTELY KNOW WHAT YOU ARE DOING -->
	<configuration scope="XmlLayout">
		<param name="CONSTRAINT_TERM_TEXT">
			<type>String</type>
			<value>term</value>
		</param>
		<param name="CONSTRAINT_USER_TEXT">
			<type>String</type>
			<value>user</value>
		</param>
		<param name="CONSTRAINT_LANGUAGE_TEXT">
			<type>String</type>
			<value>language</value>
		</param>
		<param name="CONSTRAINT_SITE_TEXT">
			<type>String</type>
			<value>site</value>
		</param>
		<param name="CONSTRAINT_BOARD_TEXT">
			<type>String</type>
			<value>board</value>
		</param>
		<param name="CONSTRAINT_BLOG_TEXT">
			<type>String</type>
			<value>blog</value>
		</param>
		<param name="CONSTRAINT_LOCATION_TEXT">
			<type>String</type>
			<value>geoLocation</value>
		</param>
		
		
		
		<!-- this section contains the xml structure for the crawler configuration
			 for compatibility reasons the first 4 (root-, singleConfiguration-,
			 value- and scopeIdentifier CAN NOT BE CHANGED! even if you do so here,
			 this won't have any effect as they need are hard coded in the 
			 GeneralConfiguration class. 
		 -->
		<param name="rootIdentifier">
			<type>String</type>
			<value>configurations</value>
		</param>
		<param name="singleConfigurationIdentifier">
			<type>String</type>
			<value>configuration</value>
		</param>
		<param name="valueIdentifier">
			<type>String</type>
			<value>value</value>
		</param>
		<param name="scopeIdentifier">
			<type>String</type>
			<value>scope</value>
		</param>
		<!-- changing these values will become possible (in revision 1.1) to reflect XML layout changes -->
		<param name="customerIdentifier">
			<type>String</type>
			<value>customer</value>
		</param>
		<param name="customerNameIdentifier">
			<type>String</type>
			<value>name</value>
		</param>
		<param name="customerNameForAllValue">
			<type>String</type>
			<value>ALL</value>
		</param>
		<param name="domainIdentifier">
			<type>String</type>
			<value>domain</value>
		</param>
		<param name="domainStructureIdentifier">
			<type>String</type>
			<value>domainStructure</value>
		</param>
		<param name="domainNameIdentifier">
			<type>String</type>
			<value>name</value>
		</param>
		<param name="domainNameForAllValue">
			<type>String</type>
			<value>ALL</value>
		</param>
		<param name="constraintIdentifier">
			<type>String</type>
			<value>constraints</value>
		</param>
		<param name="scopeOnAllValue">
			<type>String</type>
			<value>ALL</value>
		</param>
		<param name="singleConstraintIdentifier">
			<type>String</type>
			<value>constraint</value>
		</param>
		<param name="codeIdentifier">
			<type>String</type>
			<value>code</value>
		</param>
	</configuration>
</configurations>